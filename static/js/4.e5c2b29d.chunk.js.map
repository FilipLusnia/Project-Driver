{"version":3,"sources":["components/Redux/Actions/forumActions.js","components/Forum/Reply.js","components/Forum/Comment.js","components/Forum/Forum.js"],"names":["sendComment","text","creds","dispatch","getState","getFirebase","firestore","collection","add","name","userName","surname","userSurname","comment","date","Date","then","type","catch","err","sendReply","commId","doc","reply","compose","connect","state","props","commentReplies","ordered","id","firebase","profile","commentId","forumError","forumReducer","fbauth","auth","firestoreConnect","subcollections","storeAs","orderBy","useState","replyText","setReplyText","console","log","length","map","e","key","className","moment","toDate","calendar","color","height","uid","onChange","target","value","onClick","preventDefault","Comment","repliesHidden","setRepliesHidden","handleClick","comments","commentText","setCommentText","Navigation","window","scrollTo","Footer"],"mappings":"wHAAA,oEAAO,IAAMA,EAAc,SAACC,EAAMC,GAC9B,OAAO,SAACC,EAAUC,EAAX,IACcC,EADyB,EAAjBA,eAEEC,YAEjBC,WAAW,YAAYC,IAAI,CACjCC,KAAMP,EAAMQ,SACZC,QAAST,EAAMU,YACfC,QAASZ,EACTa,KAAM,IAAIC,OAEbC,MAAK,kBAAMb,EAAS,CACjBc,KAAM,2BAETC,OAAM,SAAAC,GAAG,OAAIhB,EAAS,CACnBc,KAAM,oBACNE,aAKCC,EAAY,SAACnB,EAAMC,EAAOmB,GACnC,OAAO,SAAClB,EAAUC,EAAX,IACcC,EADyB,EAAjBA,eAEEC,YAEjBC,WAAW,YAAYe,IAAID,GAAQd,WAAW,WAAWC,IAAI,CACnEC,KAAMP,EAAMQ,SACZC,QAAST,EAAMU,YACfW,MAAOtB,EACPa,KAAM,IAAIC,OAEbC,MAAK,kBAAMb,EAAS,CACjBc,KAAM,yBAETC,OAAM,SAAAC,GAAG,OAAIhB,EAAS,CACnBc,KAAM,kBACNE,c,sJC2CZ,IAkBeK,cACXC,aAnBoB,SAACC,EAAOC,GAC9B,MAAM,CACJC,eAAgBF,EAAMpB,UAAUuB,QAAhB,kBAAmCF,EAAMG,KACzDpB,SAAUgB,EAAMK,SAASC,QAAQvB,KACjCG,YAAac,EAAMK,SAASC,QAAQrB,QACpCsB,UAAWN,EAAMG,GACjBI,WAAYR,EAAMS,aAAaD,WAC/BE,OAAQV,EAAMK,SAASM,SAIA,SAAAlC,GACzB,MAAO,CACLiB,UAAW,SAACnB,EAAMC,EAAOmB,GAAd,OAAyBlB,EAASiB,YAAUnB,EAAMC,EAAOmB,SAOpEiB,4BAAiB,SAAAX,GAAK,MAAG,CAAC,CACxBpB,WAAY,WACZe,IAAKK,EAAMG,GACXS,eAAgB,CAAC,CAAChC,WAAY,YAC9BiC,QAAQ,WAAD,OAAab,EAAMG,IAC1BW,QAAS,CAAC,OAAQ,YAPTjB,EAzFf,SAAeG,GAAQ,IAAD,EAEce,qBAFd,mBAEbC,EAFa,KAEFC,EAFE,KAwBpB,OAFAjB,EAAMO,YAAcW,QAAQC,IAAInB,EAAMO,YAGpC,oCACE,4BACGP,EAAMC,eACJD,EAAMC,eAAemB,OAAS,EAE/BpB,EAAMC,eAAeoB,KAAI,SAAAC,GAAC,OACtB,wBACEC,IAAKD,EAAEnB,GACPqB,UAAU,eAEV,uBAAGA,UAAU,oBAAoBF,EAAExC,KAAnC,IAA0CwC,EAAEtC,SAC5C,uBAAGwC,UAAU,oBAAoBF,EAAE1B,OACnC,uBAAG4B,UAAU,oBAAoBC,IAAOH,EAAEnC,KAAKuC,UAAUC,gBAM7D,uBAAGH,UAAU,kBAAb,4EAGF,kBAAC,IAAD,CAAQlC,KAAK,UAAUsC,MAAM,UAAUC,OAAQ,MAIlD7B,EAAMS,OAAOqB,IACZ,0BAAMN,UAAU,cACd,2BAAOA,UAAU,oBAAjB,aAEE,8BACEO,SAnDS,SAAAT,GACnBL,EAAaK,EAAEU,OAAOC,QAmDZ3C,KAAK,OACLR,KAAK,OACLmD,MAAOjB,EACPQ,UAAU,yBAGd,2BAAOU,QAtDK,SAAAZ,GAClBA,EAAEa,iBACFlB,EAAa,IAEb,IAAM1C,EAAQ,CACZQ,SAAUiB,EAAMjB,SAChBE,YAAae,EAAMf,cAGT,OAAT+B,QAAS,IAATA,OAAA,EAAAA,EAAWI,QAAS,GAAKpB,EAAMjB,UAAYiB,EAAMM,WAClDN,EAAMP,UAAUuB,EAAWzC,EAAOyB,EAAMM,YA4CPhB,KAAK,SAAS2C,MAAM,cAAST,UAAU,uBAGtE,uBAAGA,UAAU,mBAAb,6ECpEO,SAASY,EAAT,GAAsD,IAApClD,EAAmC,EAAnCA,QAASJ,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,QAASG,EAAW,EAAXA,KAAMgB,EAAK,EAALA,GAAK,EAExBY,oBAAS,GAFe,mBAE3DsB,EAF2D,KAE5CC,EAF4C,KAI5DC,EAAc,SAAAjB,GAClBA,EAAEa,iBACFG,GAAkBD,IAGpB,OACE,yBAAKb,UAAU,iBACb,uBAAGA,UAAU,sBAAsB1C,EAAnC,IAA0CE,GAC1C,uBAAGwC,UAAU,sBAAsBtC,GACnC,uBAAGsC,UAAU,sBAAsBC,IAAOtC,EAAKuC,UAAUC,YAEzD,yBAAKH,UAAU,gCACXa,EACA,4BAAQb,UAAU,2BAA2BU,QAASK,GAAtD,4BAGA,oCACE,yBAAKf,UAAU,+BACb,uBAAGA,UAAU,qCAAb,eACA,kBAAC,EAAD,CAAOrB,GAAIA,KAEb,4BAAQqB,UAAU,yBAAyBU,QAASK,GAApD,uBC8EG1C,sBACbC,aAjBsB,SAAAC,GACtB,MAAM,CACJyC,SAAUzC,EAAMpB,UAAUuB,QAAQsC,SAClCzD,SAAUgB,EAAMK,SAASC,QAAQvB,KACjCG,YAAac,EAAMK,SAASC,QAAQrB,QACpCuB,WAAYR,EAAMS,aAAaD,WAC/BE,OAAQV,EAAMK,SAASM,SAIA,SAAAlC,GACzB,MAAO,CACLH,YAAa,SAACC,EAAMC,GAAP,OAAiBC,EAASH,YAAYC,EAAMC,SAM3DoC,2BAAiB,CAAC,CAChB/B,WAAY,WACZkC,QAAS,CAAC,OAAQ,WAJPjB,EAhGf,SAAeG,GAAQ,IAAD,IAEkBe,qBAFlB,mBAEb0B,EAFa,KAEAC,EAFA,KA0BpB,OAFA1C,EAAMO,YAAcW,QAAQC,IAAInB,EAAMO,YAGpC,oCACE,kBAACoC,EAAA,EAAD,MACA,yBAAKnB,UAAU,mBACb,wBAAIA,UAAU,eAAd,mBAA4C,6BAA5C,iDACCxB,EAAMS,OAAOqB,IACZ,0BAAMN,UAAU,cACd,2BAAOA,UAAU,oBAAjB,cAEE,8BACEO,SAhCO,SAAAT,GACnBoB,EAAepB,EAAEU,OAAOC,QAgCZ3C,KAAK,OACLR,KAAK,OACLmD,MAAOQ,EACPjB,UAAU,yBAGd,2BAAOU,QAnCG,SAAAZ,GAClBA,EAAEa,iBACFO,EAAe,IAEf,IAAMnE,EAAQ,CACZQ,SAAUiB,EAAMjB,SAChBE,YAAae,EAAMf,cAGP,OAAXwD,QAAW,IAAXA,OAAA,EAAAA,EAAarB,QAAS,GAAKpB,EAAMjB,UAAYiB,EAAMf,aACpDe,EAAM3B,YAAYoE,EAAalE,GAGjCqE,OAAOC,SAAS,EAAG,MAsBkBvD,KAAK,SAAS2C,MAAM,QAAQT,UAAU,uBAGrE,uBAAGA,UAAU,mBAAb,mEAEDxB,EAAMwC,UAEJ,UAAAxC,EAAMwC,gBAAN,eAAgBpB,QAAS,EAExB,wBAAII,UAAU,yBAEVxB,EAAMwC,SAASnB,KAAI,SAAAnC,GAAO,OACxB,wBAAIqC,IAAKrC,EAAQiB,IACf,kBAACiC,EAAD,CACElD,QAASA,EAAQA,QACjBJ,KAAMI,EAAQJ,KACdE,QAASE,EAAQF,QACjBG,KAAMD,EAAQC,KACdgB,GAAIjB,EAAQiB,UAOtB,uBAAGqB,UAAU,mBAAb,oDAEF,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAQlC,KAAK,UAAUsC,MAAM,UAAUC,OAAQ,OAIrD,kBAACiB,EAAA,EAAD","file":"static/js/4.e5c2b29d.chunk.js","sourcesContent":["export const sendComment = (text, creds) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = firebase.firestore();\r\n\r\n        firestore.collection('comments').add({\r\n            name: creds.userName,\r\n            surname: creds.userSurname,\r\n            comment: text,\r\n            date: new Date()\r\n        })\r\n        .then(() => dispatch({\r\n            type: 'COMMENT_SEND_SUCCES'\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: 'COMMENT_SEND_FAIL', \r\n            err\r\n        }))\r\n    }\r\n}\r\n\r\nexport const sendReply = (text, creds, commId) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = firebase.firestore();\r\n\r\n        firestore.collection('comments').doc(commId).collection('replies').add({\r\n            name: creds.userName,\r\n            surname: creds.userSurname,\r\n            reply: text,\r\n            date: new Date()\r\n        })\r\n        .then(() => dispatch({\r\n            type: 'REPLY_SEND_SUCCES'\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: 'REPLY_SEND_FAIL', \r\n            err\r\n        }))\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {sendReply} from '../Redux/Actions/forumActions';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport moment from 'moment';\r\n\r\nfunction Reply(props) {\r\n\r\n  const [replyText, setReplyText] = useState();\r\n\r\n  const handleChange = e => {\r\n    setReplyText(e.target.value);\r\n  }\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setReplyText('');\r\n\r\n    const creds = {\r\n      userName: props.userName, \r\n      userSurname: props.userSurname\r\n    }\r\n\r\n    if(replyText?.length > 0 && props.userName && props.commentId){\r\n      props.sendReply(replyText, creds, props.commentId);\r\n    }\r\n  }\r\n\r\n  props.forumError && console.log(props.forumError)\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {props.commentReplies ?\r\n          (props.commentReplies.length > 0) ?\r\n\r\n          props.commentReplies.map(e => (\r\n              <li \r\n                key={e.id}\r\n                className=\"forum_reply\"\r\n              >\r\n                <p className=\"forum_reply_name\">{e.name} {e.surname}</p>\r\n                <p className=\"forum_reply_text\">{e.reply}</p>\r\n                <p className=\"forum_reply_date\">{moment(e.date.toDate()).calendar()}</p>\r\n              </li>\r\n            ))\r\n            \r\n\r\n          :\r\n            <p className=\"noreplies_info\">Nikt jeszcze nie odpowiedział na ten post. Bądź pierwszy!</p>\r\n\r\n        :\r\n          <Loader type=\"Circles\" color=\"#5365ff\" height={30}/>\r\n        }\r\n      </ul>\r\n\r\n      {props.fbauth.uid ?\r\n        <form className=\"reply_form\">\r\n          <label className=\"reply_form_label\">\r\n            Odpowiedz:\r\n            <textarea \r\n              onChange={handleChange} \r\n              type=\"text\" \r\n              name=\"name\" \r\n              value={replyText} \r\n              className=\"reply_form_textarea\" \r\n            />\r\n          </label>\r\n          <input onClick={handleClick} type=\"submit\" value=\"Wyślij\" className=\"reply_form_submit\" />\r\n        </form>\r\n      :\r\n        <p className=\"reply_form_info\">Aby móc odpowiadać na posty - musisz się zalogować.</p>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return{\r\n    commentReplies: state.firestore.ordered[`replies-${props.id}`],\r\n    userName: state.firebase.profile.name,\r\n    userSurname: state.firebase.profile.surname,\r\n    commentId: props.id,\r\n    forumError: state.forumReducer.forumError,\r\n    fbauth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendReply: (text, creds, commId) => dispatch(sendReply(text, creds, commId))\r\n\r\n  }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect(props =>[{\r\n      collection: 'comments',\r\n      doc: props.id,\r\n      subcollections: [{collection: 'replies'}],\r\n      storeAs: `replies-${props.id}`,\r\n      orderBy: ['date', 'asc']\r\n    }])\r\n)(Reply)","import React, { useState } from 'react';\r\n\r\nimport Reply from './Reply';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default function Comment({comment, name, surname, date, id}) {\r\n\r\n  const [repliesHidden, setRepliesHidden] = useState(true);\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setRepliesHidden(!repliesHidden);\r\n  }\r\n\r\n  return (\r\n    <div className=\"forum_comment\">\r\n      <p className=\"forum_comment_name\">{name} {surname}</p>\r\n      <p className=\"forum_comment_text\">{comment}</p>\r\n      <p className=\"forum_comment_date\">{moment(date.toDate()).calendar()}</p>\r\n\r\n      <div className=\"forum_comment_bottom_section\">\r\n        { repliesHidden ?\r\n          <button className=\"forum_comment_btn-unwrap\" onClick={handleClick}>Pokaż komentarze...</button>\r\n\r\n        :\r\n          <>\r\n            <div className=\"forum_comment_reply_section\">\r\n              <p className=\"forum_comment_reply_section_title\">Odpowiedzi:</p>\r\n              <Reply id={id}/>\r\n            </div>\r\n            <button className=\"forum_comment_btn-wrap\" onClick={handleClick}>Ukryj komentarze</button>\r\n          </>\r\n        } \r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\n\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Footer from '../Navigation/Footer';\r\nimport Comment from './Comment';\r\nimport {sendComment} from '../Redux/Actions/forumActions';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nfunction Forum(props) {\r\n\r\n  const [commentText, setCommentText] = useState();\r\n\r\n  const handleChange = e => {\r\n    setCommentText(e.target.value);\r\n  }\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    setCommentText('');\r\n\r\n    const creds = {\r\n      userName: props.userName, \r\n      userSurname: props.userSurname\r\n    }\r\n\r\n    if(commentText?.length > 0 && props.userName && props.userSurname){\r\n      props.sendComment(commentText, creds);\r\n    }\r\n\r\n    window.scrollTo(0, 350)\r\n  }\r\n\r\n  props.forumError && console.log(props.forumError)\r\n\r\n  return (\r\n    <>\r\n      <Navigation/>\r\n      <div className=\"forum_container\">\r\n        <h1 className=\"forum_title\">Witaj na forum. <br/> Nie krępuj się i pytaj o wszystko!</h1>\r\n        {props.fbauth.uid ?\r\n          <form className=\"forum_form\">\r\n            <label className=\"forum_form_label\">\r\n              Dodaj post:\r\n              <textarea \r\n                onChange={handleChange} \r\n                type=\"text\" \r\n                name=\"name\" \r\n                value={commentText} \r\n                className=\"forum_form_textarea\" \r\n              />\r\n            </label>\r\n            <input onClick={handleClick} type=\"submit\" value=\"Dodaj\" className=\"forum_form_submit\" />\r\n          </form>\r\n        :\r\n          <p className=\"forum_form_info\">Aby móc dodawać posty - musisz się zalogować.</p>\r\n        }\r\n        {props.comments \r\n        ?\r\n          (props.comments?.length > 0) \r\n          ?\r\n            <ul className=\"forum_posts_container\">\r\n              {\r\n                props.comments.map(comment => (\r\n                  <li key={comment.id}>\r\n                    <Comment\r\n                      comment={comment.comment}\r\n                      name={comment.name}\r\n                      surname={comment.surname}\r\n                      date={comment.date}\r\n                      id={comment.id}\r\n                    />\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n          :\r\n            <p className=\"nocomments_info\"> Na forum nie ma jeszcze żadnych postów.</p>\r\n        :\r\n          <div className=\"forum_loader\">\r\n            <Loader type=\"Circles\" color=\"#5365ff\" height={80}/>\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    comments: state.firestore.ordered.comments,\r\n    userName: state.firebase.profile.name,\r\n    userSurname: state.firebase.profile.surname,\r\n    forumError: state.forumReducer.forumError,\r\n    fbauth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendComment: (text, creds) => dispatch(sendComment(text, creds))\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{\r\n    collection: 'comments',\r\n    orderBy: ['date', 'desc']\r\n  }])\r\n)(Forum)"],"sourceRoot":""}